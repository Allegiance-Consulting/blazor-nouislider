@inject IJSRuntime JSRuntime
@using Allegiance.Blazor.NoUiSlider.Models
@typeparam TValue

<h3>NoUiSlider</h3>

<div id="slider"></div>

@code {
    private NoUiSliderConfiguration<TValue> configuration;

    [Parameter]
    public TValue Value { get; set; }
    [Parameter]
    public EventCallback<TValue> ValueChanged { get; set; }
    [Parameter]
    public NoUiSliderConfiguration<TValue> Configuration {
        get
        {
            return configuration;
        }
        set
        {
            if (configuration != null)
            {
                configuration = value;
                JSRuntime.InvokeVoidAsync("updateSlider", configuration);
            }
            else
            {
                configuration = value;
            }
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            configuration.Start = Value;
            var objectReference = DotNetObjectReference.Create(this);
            await JSRuntime.InvokeVoidAsync("renderSlider", Configuration, objectReference);
        }
    }

    [JSInvokable("valueChanged")]
    public void SliderValueChanged(TValue newValue)
    {
        if (ValueChanged.HasDelegate)
        {
            ValueChanged.InvokeAsync(newValue);
        }
        Console.WriteLine(newValue);
    }
}
